@charset 'utf-8';

@import './fonts';

@import './nostromo.config';

@import '../node_modules/nostromo-css/default.scss';

@import '../components/layouts/BaseLayout';

@import '../components/layouts/HeaderLayout';

@import '../components/layouts/ScrollLayout';

@import '../components/layouts/SectionLayout';

@import '../components/layouts/BubbleChart';

@import '../components/sections/HomeSection';

@import '../components/shared/Chatbot';

body {
  background-color: color('primary');
}

::placeholder {
  color: color('grey-light-2');
}

.js-loading *,
.js-loading *:before,
.js-loading *:after {
  animation-play-state: paused !important;
}

// Fake loading

.fake-loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: color('primary');
  color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 9999;

  .loader {
    position: relative;
    width: 60%;
    height: 15vmin;

    &::before {
      content: '';
      position: absolute;
      display: block;
      background: url('/static/images/brand-logo.svg') no-repeat center;
      width: 60%;
      height: 60%;
      top: 20%;
      left: 20%;
    }
  }
}

// Responsive svg

.svg-container {
  display: block;
  height: 0;
  position: relative;
  margin: auto;
  width: 100%;
  padding: 0; /* reset */
  /* padding-bottom will allow the height to be calculated relative to the available width of the container */
  /* 100% => height = 100% of the width
  /*padding-bottom could be overwritten  in javascript*/
  padding-bottom: 100%; /* if calc needed padding-bottom: calc(100% * svgHeight / svgWidth); */

  > svg {
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
  }
}

// Chart button styling

.btn-accessor {
  position: relative;
  transition: transform 0.25s ease-out;
  transform: translateY(0);

  &::after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 4px;
    bottom: 0;
    left: 0;
    background-color: color('alert');
    transform-origin: bottom right;
    transition: transform 0.25s ease-out;
  }

  &.active {
    transform: translateY(-20%);

    &::after {
      transform: scaleX(1);
      transform-origin: bottom left;
    }
  }
}

// Contact form

.contact__email {
}

.contact__message {
  resize: none;
  height: 250px;
  font-size: inherit;
  font-family: inherit;
}

.control__error {
  display: block;
  width: 100%;
  pointer-events: none;
  // z-index: 3000;

  // &::after {
  //   content: '';
  //   width: 0;
  //   height: 0;
  //   color: color('invalid');
  //   border-left: 12px solid currentColor;
  //   border-bottom: 12px solid transparent;
  //   border-top: 12px solid transparent;
  //   position: absolute;

  //   top: 5%;
  //   left: 100%;
  //   pointer-events: none;
  // }
}

.sent-image {
  width: 50%;
}

.composition {
  position: relative;
  width: 100%;

  &__photo {
    width: 60%;
    position: absolute;
    box-shadow: 0 1.5rem 4rem rgba(color('black'), 0.4);
    border-radius: 2px;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem;

    // @include respondFromDesktop(tablet-portrait) {
    //   float: left;
    //   position: relative;
    //   width: 33.333333%;
    //   box-shadow: 0 1.5rem 3rem rgba($color-black, 0.2);
    // }

    &--p1 {
      left: 0;
      top: -2rem;

      // @include respondFromDesktop(tablet-portrait) {
      //   top: 0;
      //   transform: scale(1.2);
      // }
    }

    &--p2 {
      right: 0;
      top: 2rem;

      // @include respondFromDesktop(tablet-portrait) {
      //   top: -1rem;
      //   transform: scale(1.3);
      //   z-index: 100;
      // }
    }

    &--p3 {
      left: 20%;
      top: 10rem;
      // @include respondFromDesktop(tablet-portrait) {
      //   top: 1rem;
      //   left: 0;
      //   transform: scale(1.1);
      // }
    }

    &:hover {
      outline: 1.2rem solid color('alert');
      transform: scale(2.2) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(color('black'), 0.5);
      z-index: 20;
    }
  }

  &:hover &__photo:not(:hover) {
    transform: scale(0.9);
  }
}
